{
    "collab_server" : "",
    "contents" : "library(rvest)\nlibrary(RCurl) # used to get URLs\nlibrary(stringr) # used to replace specific values with other values \nlibrary(dplyr) # used to pipe data manipultion\nlibrary(tidyr)\nlibrary(googlesheets)\n\n## Grab  MSA area codes from google sheets\nareaCodeConnection <- getURL(\"https://docs.google.com/spreadsheets/d/1MIgcX_LQBF2J2pzevXRPJzy9UKjaVls9vNda3Pgay3Q/pub?gid=0&single=true&output=csv\")\npeerAreaCodes <- read.csv(textConnection(areaCodeConnection))\n\n############# VARIABLES\n\n# ACS API Key\napiKey <- \"00b1974d78394a0f553ab06d7d20f58d9fee6e51\"\n\n##  ACS DATA VARIABLES\n##Info about ACS 1 yr API https://www.census.gov/data/developers/data-sets/acs-1year.html\n##  subject variables: https://api.census.gov/data/2015/acs1/subject/variables.json \n## profile variables:   https://api.census.gov/data/2015/acs1/profile/variables.json \nmedianHouseholdWage <- \"DP03_0062E\" # profile\npopulation <- \"S0101_C01_001E\" # subject\nmedianHomeValue <- \"DP04_0089E\" #  profile\nmedianMonthlyRent <- \"DP04_0134E\" # profile\nlaborForceParticipationRate <- \"S2301_C02_001E\" #subject\n\n# ACS AREAS\nacsMetros <- \"metropolitan+statistical+area/micropolitan+statistical+area:*\"\nacsKentucky <- \"state:21\"\nacsUS <- \"us:*\"\n\n## LAUS COLUMN NAMES\nunemploymentRateName <- \"Unemployment Rate\"\nlaborForceSizeName <- \"Labor Force Size\"\n\n# BLS AREAS \nblsUS <- \"US000\"\nblsKY <- \"21000\"\nblsBirmingham <- \"C1382\"\nblsCharlotte <- \"C1674\"\nblsCincinnati <- \"C1714\"\nblsColumbus <- \"C1814\"\nblsDayton <- \"C1938\"\nblsGreensboro <- \"C2466\"\nblsIndianapolis <- \"C2690\"\nblsJacksonville <- \"C2726\"\nblsKansasCity <- \"C2814\"\nblsLouisville <- \"C3114\"\nblsMemphis <- \"C3282\"\nblsNashville <- \"C3498\"\nblsOmaha <- \"C3654\"\nblsRaleigh <- \"C3958\"\nblsRichmond <- \"C4006\"\n\ncurrentYear <- as.numeric(format(Sys.Date(), \"%Y\"))\nquarter <-  4\n\n################################## FUNCTIONS\n\n# GET CURRENT BLS QCEW DATA\ngetQcewData <- function(quarter, currentYear, blsAreaCode) {\n  dataURL <- paste0(\"https://data.bls.gov/cew/data/api/\", currentYear, \"/\", quarter, \"/area/\", blsAreaCode, \".csv\")\n  dataConnection <- textConnection(getURL(dataURL))\n  dataHere <- read.csv(dataConnection)\n  close(dataConnection)\n  if (ncol(dataHere) > 2) return (dataHere)\n  else { \n    for (i in 4:1) {\n      dataURL <- paste0(\"https://data.bls.gov/cew/data/api/\", currentYear, \"/\", i, \"/area/\", blsAreaCode, \".csv\")\n      dataConnection <- textConnection(getURL(dataURL))\n      dataHere <- read.csv(dataConnection)\n      close(dataConnection)\n      if (ncol(dataHere) > 2) return (dataHere)\n    }\n    currentYear = currentYear - 1 \n    for (i in 4:1) {\n      dataURL <- paste0(\"https://data.bls.gov/cew/data/api/\", currentYear, \"/\", i, \"/area/\", blsAreaCode, \".csv\")\n      dataConnection <- textConnection(getURL(dataURL))\n      dataHere <- read.csv(dataConnection)\n      close(dataConnection)\n      if (ncol(dataHere) > 2) return (dataHere)\n    }\n  }\n}\n\nqcewDataFilter2011 <- function(dataHere) {\n  dataHere %>% \n    filter((own_code == 0 | own_code == 5) & industry_code == 10) %>% \n    select(1, 2, 9, 10, 11, 14, 15)\n}\n\nqcewDataFilter <- function(dataHere, enterMSA) {\n  dataHere %>% \n    filter(industry_code == 10) %>% \n    filter(own_code == 5 | own_code == 0) %>%\n    select(1, 2, 9, 12) %>% \n    mutate(MSA = enterMSA)\n}\n\n## BLS IMPORT\n####  IMPORT FROM BLS FUNCTION ##\n# https://download.bls.gov/pub/time.series/overview.txt\n\nimport.from.bls <- function(web.address, filenameInput) {\n  \n  # Import data\n  temp <- tempfile()\n  download.file(web.address, temp)\n  data <- read.table(temp,\n                     header=FALSE,\n                     sep=\"\\t\",\n                     skip=1,\n                     stringsAsFactors=FALSE,\n                     strip.white=TRUE,\n                     quote = NULL)\n  \n  # Add column headers\n  topline <- readLines(web.address)\n  topline <- topline[1] # Select column headers\n  topline <- as.list(strsplit(x = topline, split = \"\\t\")[[1]]) # Split the string into a list\n  colnames(data) <- topline\n  \n  unlink(temp)\n  \n  # Drop extra, unused column\n  data <- data[,1:(ncol(data) - 1)]\n  \n  # This command plucks the text that appears after the pattern below,\n  # and uses it to name the file.\n  #filename <- gsub(pattern = \"https://download.bls.gov/pub/time.series/\",\"\", x = web.address, ignore.case=T)\n  \n  # save the file to the global environment\n  assign(filenameInput, data, envir = .GlobalEnv) \n}\n\n## LAUS DATA CLEAN/MANIPULATE\nlausDataManipulation <- function(lausData, dataArea) {\n  lausData <- lausData\n  lausData[,\"area_code\"] <- substr(lausData[,\"series_id\"], 8,12)\n  lausData[,\"datapoint\"] <- substr(lausData[,\"series_id\"], 19,20)\n  lausData[,\"type\"] <- substr(lausData[,\"series_id\"], 1,5)\n  lausData[,\"month\"] <- substr(lausData[,\"period\"], 2,3)\n  \n  lausData[,\"area_code\"] <- as.numeric(as.character(lausData[,\"area_code\"]))\n  lausData[,\"month\"] <- as.numeric(as.character(lausData[,\"month\"]))\n  lausData <- lausData %>% filter(month != 13)\n  \n  if (dataArea == \"KY\") {\n    lausData <- lausData %>% filter(area_code == 0 & type == \"LASST\") %>% select(-5)\n    lausData$area_code = 21\n    lausData\n  }\n  if (dataArea == \"Metros\") {\n    ## FILTER PEER CITIES WITHIN LAUS METROS AND SELECT NECESSARY VARIABLES\n    lausData <- lausData %>% filter(((area_code %in% peerAreaCodes$area_code) & type == \"LAUMT\"))  \n    #lausData <- lausData %>% select(2, 4:6, 9)\n    lausData\n  }\n  \n  ## LATEST MONTH\n  latestMonth <- as.numeric(max(lausData$month))\n  #latestYearBlsLaus <- as.numeric(max(lausData$year))\n  \n  lausData <- lausData %>% filter((datapoint == \"03\" | datapoint == \"06\") & month == latestMonth )\n  lausData <- left_join(lausData, lausPeriod, by = \"period\") \n  #lausData <- lausData %>% filter(year == latestYearBlsLaus)\n}\n\n## ACS DATA\n## Example URL\n#http://api.census.gov/data/2015/acs1/profile?get=NAME,DP04_0089E&for=state:021&key=00b1974d78394a0f553ab06d7d20f58d9fee6e51\ngetDataAcs <- function(tableCode, areaHere, currentYear, dataPath) {\n  dataURL <- getURL(paste0(\"https://api.census.gov/data/\", currentYear, \"/acs1/\", dataPath, \"?get=NAME,\", tableCode, \"&for=\", areaHere, \"&key=\", apiKey))\n  dataConnection <- textConnection(dataURL)\n  dataHere <- read.csv(dataConnection)\n  close(dataConnection)\n  if (nrow(dataHere) >= 1) return (dataHere)\n  for (i in currentYear:2015) {\n    dataURL <- getURL(paste0(\"https://api.census.gov/data/\", i, \"/acs1/\", dataPath, \"?get=NAME,\", tableCode, \"&for=\", areaHere, \"&key=\", apiKey))\n    dataConnection <- textConnection(dataURL)\n    dataHere <- read.csv(dataConnection)\n    close(dataConnection)\n    if (nrow(dataHere) >= 1) return (dataHere)\n  }\n}\n#test <- getDataAcs(medianHomeValue, acsMetros, currentYear, \"profile\")\n\n\ncleanAcsDataMetros <- function(dataHere, dataPointName){\n  dataHere[,\"X..NAME\"] <- str_replace_all(dataHere[,\"X..NAME\"], \"\\\\[\", \"\")\n  dataHere[,\"metropolitan.statistical.area.micropolitan.statistical.area.\"] <- str_replace_all(dataHere[,\"metropolitan.statistical.area.micropolitan.statistical.area.\"], \"\\\\]\", \"\")\n  colnames(dataHere)[3] <- \"area_code\"\n  colnames(dataHere)[2] <- dataPointName\n  dataHere[,dataPointName] <- as.numeric(as.character(dataHere[,dataPointName]))\n  dataHere[,\"area_code\"] <- as.numeric(as.character(dataHere[,\"area_code\"])) \n  dataHere <- dataHere %>% select(2:3)\n  dataHere <- dataHere %>% filter(area_code %in% peerAreaCodes$area_code)\n  return (dataHere)\n}\n\ncleanAcsDataStateUs <- function(dataHere, dataPointName) {\n  dataHere[,3] <- str_replace_all(dataHere[,3], \"\\\\]\", \"\")\n  colnames(dataHere)[3] <- \"area_code\"\n  colnames(dataHere)[2] <- dataPointName\n  dataHere[,dataPointName] <- as.numeric(as.character(dataHere[,dataPointName]))\n  dataHere[,\"area_code\"] <- as.numeric(as.character(dataHere[,\"area_code\"])) \n  dataHere <- dataHere %>% select(3:2)\n  return (dataHere)\n}\n\n### ACS DATA \n#METRO DATA  ACS\nmedianHomeValueMetros <- cleanAcsDataMetros(getDataAcs(medianHomeValue, acsMetros, currentYear, \"profile\"), \"Median Home Value\")\nmedianHouseholdWageMetros <- cleanAcsDataMetros(getDataAcs(medianHouseholdWage, acsMetros, currentYear, \"profile\"), \"Median Household Wage\")\npopulationMetros <- cleanAcsDataMetros(getDataAcs(population, acsMetros, currentYear, \"subject\"), \"Population\") \nmedianMonthlyRentMetros <-cleanAcsDataMetros(getDataAcs(medianMonthlyRent, acsMetros, currentYear, \"profile\"), \"Median Monthly Rent\")\nlaborForceParticipationRateMetros <- cleanAcsDataMetros(getDataAcs(laborForceParticipationRate, acsMetros, currentYear, \"subject\"), \"Labor Force Participation Rate\")\n\n#STATE DATA ACS\nmedianHomeValueKY <- cleanAcsDataStateUs(getDataAcs(medianHomeValue, acsKentucky, currentYear, \"profile\"), \"Median Home Value\")\nmedianHouseholdWageKY <- cleanAcsDataStateUs(getDataAcs(medianHouseholdWage, acsKentucky, currentYear, \"profile\"), \"Median Household Wage\")\npopulationKY <- cleanAcsDataStateUs(getDataAcs(population, acsKentucky, currentYear, \"subject\"), \"Population\") \nmedianMonthlyRentKY <-cleanAcsDataStateUs(getDataAcs(medianMonthlyRent, acsKentucky, currentYear, \"profile\"), \"Median Monthly Rent\")\nlaborForceParticipationRateKY <- cleanAcsDataStateUs(getDataAcs(laborForceParticipationRate, acsKentucky, currentYear, \"subject\"), \"Labor Force Participation Rate\")\n\n# UNITED STATES DATA ACS\nmedianHomeValueUS <- cleanAcsDataStateUs(getDataAcs(medianHomeValue, acsUS, currentYear, \"profile\"), \"Median Home Value\")\nmedianHouseholdWageUS <- cleanAcsDataStateUs(getDataAcs(medianHouseholdWage, acsUS, currentYear, \"profile\"), \"Median Household Wage\")\npopulationUS <- cleanAcsDataStateUs(getDataAcs(population, acsUS, currentYear, \"subject\"), \"Population\") \nmedianMonthlyRentUS <-cleanAcsDataStateUs(getDataAcs(medianMonthlyRent, acsUS, currentYear, \"profile\"), \"Median Monthly Rent\")\nlaborForceParticipationRateUS <- cleanAcsDataStateUs(getDataAcs(laborForceParticipationRate, acsUS, currentYear, \"subject\"), \"Labor Force Participation Rate\")\n\n### BLS  QCEW DATA \nqcewDataKentucky_2011 <- read.csv(\"2011_Kentucky.csv\") \nqcewDataLouisville_2011 <- read.csv(\"2011_LouisvilleMSA.csv\")\n\nqcewDataKY_2011 <- qcewDataFilter2011(qcewDataKentucky_2011)\nqcewDataLouisville_2011 <- qcewDataFilter2011(qcewDataLouisville_2011)\n\nqcewDataUS <- qcewDataFilter(getQcewData(quarter, currentYear, blsUS), \"United States\")\nqcewDataKY <-  qcewDataFilter(getQcewData(quarter, currentYear, blsKY), \"Kentucky\")\nqcewDataBirmingham <- qcewDataFilter(getQcewData(quarter, currentYear, blsBirmingham), \"Birmingham\")\nqcewDataCharlotte <- qcewDataFilter(getQcewData(quarter, currentYear, blsCharlotte), \"Charlotte\")\nqcewDataCincinnati <- qcewDataFilter(getQcewData(quarter, currentYear, blsCincinnati), \"Cincinnati\")\nqcewDataColumbus <- qcewDataFilter(getQcewData(quarter, currentYear, blsColumbus), \"Columbus\")\nqcewDataDayton <- qcewDataFilter(getQcewData(quarter, currentYear, blsDayton), \"Dayton\")\nqcewDataGreensboro <- qcewDataFilter(getQcewData(quarter, currentYear, blsGreensboro), \"Greensboro\")\nqcewDataIndianapolis <- qcewDataFilter(getQcewData(quarter, currentYear, blsIndianapolis), \"Indianapolis\")\nqcewDataJacksonville <- qcewDataFilter(getQcewData(quarter, currentYear, blsJacksonville), \"Jacksonville\")\nqcewDataKansasCity <- qcewDataFilter(getQcewData(quarter, currentYear, blsKansasCity), \"Kansas City\")\nqcewDataLouisville <- qcewDataFilter(getQcewData(quarter, currentYear, blsLouisville), \"Louisville\")\nqcewDataMemphis <- qcewDataFilter(getQcewData(quarter, currentYear, blsMemphis), \"Memphis\")\nqcewDataNashville <- qcewDataFilter(getQcewData(quarter, currentYear, blsNashville), \"Nashville\")\nqcewDataOmaha <- qcewDataFilter(getQcewData(quarter, currentYear, blsOmaha), \"Omaha\")\nqcewDataRaleigh <- qcewDataFilter(getQcewData(quarter, currentYear, blsRaleigh), \"Raleigh\")\nqcewDataRichmond <- qcewDataFilter(getQcewData(quarter, currentYear, blsRichmond), \"Richmond\")\n\nallCurrentQcewData <- rbind(qcewDataUS, qcewDataKY, qcewDataBirmingham, \n                            qcewDataCharlotte, qcewDataCincinnati, \n                            qcewDataColumbus, qcewDataDayton, qcewDataGreensboro, \n                            qcewDataIndianapolis, qcewDataJacksonville, qcewDataKansasCity, \n                            qcewDataLouisville, qcewDataMemphis, qcewDataNashville, \n                            qcewDataOmaha, qcewDataRaleigh, qcewDataRichmond)\n\nallCurrentQcewData <- allCurrentQcewData %>% select(-1)\n\nprivateQcewData <- allCurrentQcewData %>% filter(own_code == 5) %>% select(2:4)\nallQcewData <- allCurrentQcewData %>% filter(own_code == 0) %>% select(2:4)\n\nestablishmentsPrivate <- \"Establishments (private)\"\nestablishmentsAll <- \"Establishments (all)\"\n\nemploymentPrivate <- \"Employment (private)\"\nemploymentAll <- \"Employment (all)\"\n\ncolnames(privateQcewData)[1] <- establishmentsPrivate\ncolnames(allQcewData)[1] <- establishmentsAll\n\ncolnames(privateQcewData)[2] <- employmentPrivate\ncolnames(allQcewData)[2] <- employmentAll\n\nallCurrentQcewData <- left_join(privateQcewData, allQcewData, by = \"MSA\") %>% select(3, 1, 4, 2, 5)\n\n## GET GROWTH SINCE 2011 IN LOUISVILLE\n\n# Prepare data for merge\nqcewDataLouisville <- qcewDataLouisville %>% select(-1)\ncolnames(qcewDataLouisville)[2] <- \"Current Establishments\"\ncolnames(qcewDataLouisville)[3] <- \"Current Employment\"\n\nqcewGrowthLouisville <- qcewDataLouisville_2011 %>% select(2, 6:7) \ncolnames(qcewGrowthLouisville)[2] <- \"2011 Establishments\" \ncolnames(qcewGrowthLouisville)[3] <- \"2011 Employment\"\n\nqcewGrowthLouisville <- full_join(qcewGrowthLouisville, qcewDataLouisville, by = \"own_code\")\n\nqcewGrowthLouisville$`Establishment Growth since 2011` <- qcewGrowthLouisville$`Current Establishments`- qcewGrowthLouisville$`2011 Establishments`\nqcewGrowthLouisville$`Employment Growth since 2011` <- qcewGrowthLouisville$`Current Employment` - qcewGrowthLouisville$`2011 Employment`\n\nqcewGrowthLouisville <- qcewGrowthLouisville %>% mutate(\"Ownership type\" = ifelse(own_code == 0, \"All\", \"Private\"))\nqcewGrowthLouisville <- qcewGrowthLouisville %>% select(9, 4:5, 7:8)\n\n## BLS OES imports \nimport.from.bls(\"https://download.bls.gov/pub/time.series/oe/oe.data.0.Current\", \"oesMainData\")\nimport.from.bls(\"https://download.bls.gov/pub/time.series/oe/oe.release\", \"oesReleaseDate\")\n####### NEED TO PULL STATE AND NATION\n\n##### BLS OES DATA MANIPULATION ####\n## Create new variables (from series_id) that contains the area code and datapoint\noesMainData[,\"area_code\"] <- substr(oesMainData[,\"series_id\"], 7,11)\noesMainData[,\"industry\"] <- substr(oesMainData[,\"series_id\"], 15,23)\noesMainData[,\"datapoint\"] <- substr(oesMainData[,\"series_id\"], 24,25)\noesMainData[,\"middle\"] <- substr(oesMainData[,\"series_id\"], 5,23)\n\n## Change vairables to numeric\noesMainData[,\"area_code\"] <- as.numeric(as.character(oesMainData[,\"area_code\"]))\n#oesMainData[,\"datapoint\"] <- as.numeric(as.character(oesMainData[,\"datapoint\"]))\noesNationData <- oesMainData %>% \n  filter((datapoint == 13 & (area_code == 00) & middle == \"0000000000000000000\"))\n\noesStateData <- oesMainData %>% \n  filter((datapoint == 13 & middle == \"2100000000000000000\"))\n\noesMetrosData <- oesMainData %>% \n  filter((datapoint == \"13\" & (area_code %in% peerAreaCodes$area_code) & industry == \"000000000\")) %>% \n  select(4:5)\noesMetrosData[,1] <- as.numeric(as.character(oesMetrosData[,1]))\ncolnames(oesMetrosData)[1] <- \"Annual Median Wage (USD)\"\n\n## OES RELEASE DATA  \noesReleaseDate <- paste(oesReleaseDate$description)\n\n## CLEAN OES NATION AND STATE DATA\noesNationData <- oesNationData %>% select(value) \noesNationData$area_code <- 1\ncolnames(oesNationData)[1] <- \"Annual Median Wage (USD)\"\n\noesStateData <- oesStateData %>% select(value)\noesStateData$area_code <- 21\ncolnames(oesStateData)[1] <- \"Annual Median Wage (USD)\"\n\n## BLS LAUS imports\nimport.from.bls(\"https://download.bls.gov/pub/time.series/la/la.data.60.Metro\", \"lausMetros\") # BLS LAUS METROPOLITAN DATA\nimport.from.bls(\"https://download.bls.gov/pub/time.series/la/la.period\", \"lausPeriod\") # BLS LAUS METROPOLITAN DATA\nimport.from.bls(\"https://download.bls.gov/pub/time.series/ln/ln.data.1.AllData\", \"lausUS\") # US laus data\nimport.from.bls(\"https://download.bls.gov/pub/time.series/la/la.data.24.Kentucky\", \"lausKY\") # state laus data\n\n\n## CLEAN LAUS DATA\n#lausMetros <- lausMetros %>% filter(((area_code %in% peerAreaCodes$area_code)))\nlausKY <- lausDataManipulation(lausKY, \"KY\")\nlausMetros <- lausDataManipulation(lausMetros, \"Metros\")\n\n## GET LATEST MONTH TO USE ON ALL LAUS AND LFS CPS DATA\nlatestMonth <- as.numeric(max(lausMetros$month))\nlatestYearBlsLaus <- as.numeric(max(lausMetros$year))\n\nlausKY <- lausKY %>% filter(year == latestYearBlsLaus)\nlausMetros <- lausMetros %>% filter(year == latestYearBlsLaus)\n\n## Labor Force Statistics from the Current Population Survey (NAICS)\nlausUS[,\"month\"] <- substr(lausUS[,\"period\"], 2,3)\nlausUS[,\"month\"] <- as.numeric(as.character(lausUS[,\"month\"]))\nlausUS <- lausUS %>% filter(month != 13)\nlausUS <- lausUS %>% filter(year == latestYearBlsLaus & month == latestMonth)\nlausUS$area_code <- 1\n\n\n### US \n## US UNEMPLOYMENT\nunemploymentRateUS <- lausUS %>% filter(series_id == \"LNS14000000\")\nunemploymentRateUS <- unemploymentRateUS %>% select(4, 6)\ncolnames(unemploymentRateUS)[1] <- unemploymentRateName\n\n\n## US LABOR FORCE SIZE\nlaborForceSizeUS <- lausUS %>% filter(series_id == \"LNS11000000\")\nlaborForceSizeUS$value <- as.numeric(as.character(laborForceSizeUS$value))\nlaborForceSizeUS$value <- laborForceSizeUS$value * 1000\nlaborForceSizeUS <- laborForceSizeUS %>% select(4, 6)\ncolnames(laborForceSizeUS)[1] <- laborForceSizeName\n\n\n### PEER CITIES\n# PEER CITY UNEMPLOYMENT RATE\nunemploymentRateMetros <- lausMetros %>% filter(datapoint == \"03\") %>% select(4, 5)\ncolnames(unemploymentRateMetros)[1] <- unemploymentRateName\n# PEER CITY LABOR FORCE SIZE\nlaborForceSizeMetros <- lausMetros %>% filter(datapoint == \"06\") %>% select(4, 5)\ncolnames(laborForceSizeMetros)[1] <- laborForceSizeName\n\n\n### KENTUCKY \n### CLEAN LAUS DATA FOR KENTUCKY\nunemploymentRateKY <- lausKY %>% filter(datapoint == \"03\") %>% select(4, 8)\ncolnames(unemploymentRateKY)[1] <- unemploymentRateName\n\nlaborForceSizeKY <- lausKY %>% filter(datapoint == \"06\") %>% select(4, 8)\ncolnames(laborForceSizeKY)[1] <- laborForceSizeName\n\n## Select LAUS Date\nlausDate <- lausMetros %>% select(5, 1)\nlausDate <- lausDate[1,]\nlausDate <- paste(lausDate[,1], lausDate[,2])\n\n#### JOIN DATA TO MAKE MAIN DATA TABLE ########\n\n# populationMetros$Population <- as.numeric(populationMetros$Population) \n# laborForceSizeMetros$`Labor Force Size` <- as.numeric(laborForceSizeMetros$`Labor Force Size`)\noesMetrosData$`Annual Median Wage (USD)` <- as.numeric(oesMetrosData$`Annual Median Wage (USD)`)\n\njoinAllDataByThisVariable <- \"area_code\"\nallData <- full_join(laborForceParticipationRateMetros, laborForceSizeMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, medianHomeValueMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, medianHouseholdWageMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, medianMonthlyRentMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, populationMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, unemploymentRateMetros, by = joinAllDataByThisVariable)\nallData <- full_join(allData, oesMetrosData, by = joinAllDataByThisVariable)\nallData <- full_join(allData, peerAreaCodes, by = joinAllDataByThisVariable)\nallData <- left_join(allData, allCurrentQcewData, by = \"MSA\")\nallData <- allData %>% select(10, 1, 3:14)\n\n###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION\nlfprRanking <- allData %>%\n  mutate(\"Rank\" = rank(-`Labor Force Participation Rate`))\nlfprRanking <- lfprRanking %>% select(1, 2, 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Labor Force Participation Rate\")\ncolnames(lfprRanking)[2] <- \"Value\"\n#lfprRanking$Datapoint <- paste0(\"$\", lfprRanking$Datapoint)\n\nlfSizeRanking <- allData %>% \n  mutate(\"Rank\" = rank(-`Labor Force Size`)) %>% \n  select(1, 3, 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Labor Force Size\")\ncolnames(lfSizeRanking)[2] <- \"Value\"\n\nmedianHomeValueRanking <- allData %>% \n  mutate(\"Rank\" = rank(-`Median Home Value`)) %>% \n  select(1, 4, 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Median Home Value\")\ncolnames(medianHomeValueRanking)[2] <- \"Value\"\n\nmedianHouseholdWageRanking <- allData %>% \n  mutate(\"Rank\" = rank(-`Median Household Wage`)) %>% \n  select(1, 5, 14)  %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Median Household Wage\")\ncolnames(medianHouseholdWageRanking)[2] <- \"Value\"\n\nmedianMonthlyRentRank <- allData %>% \n  mutate(\"Rank\" = rank(-`Median Monthly Rent`)) %>% \n  select(1, 6, 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Median Monthly Rent\")\ncolnames(medianMonthlyRentRank)[2] <- \"Value\"\n\nannualMedianWageRank <- allData %>% \n  mutate(\"Rank\" = rank(-`Annual Median Wage (USD)`)) %>% \n  select(1, 9, 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Annual Median Wage (USD)\")\ncolnames(annualMedianWageRank)[2] <- \"Value\"\n\npopulationRanking <- allData %>%\n  mutate(\"Rank\" = rank(-Population)) %>%\n  select(1, 7, 14)  %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Population\")\ncolnames(populationRanking)[2] <- \"Value\"\n\nunemploymentRateRanking <- allData %>% \n  mutate(\"Rank\" = rank(`Unemployment Rate`)) %>%\n  select(1, 8 , 14) %>% \n  #filter(MSA == \"Louisville\") %>%\n  mutate(Datapoint = \"Unemployment Rate\")\ncolnames(unemploymentRateRanking)[2] <- \"Value\"\nunemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)\n\nallRankings <- rbind(lfprRanking, lfSizeRanking,\n                     medianHomeValueRanking, medianHouseholdWageRanking,\n                     medianMonthlyRentRank, annualMedianWageRank, \n                     populationRanking, unemploymentRateRanking)\n\nlouisvilleRankings <- allRankings %>% filter(MSA == \"Louisville\")\nlouisvilleRankings <- louisvilleRankings %>% select(4, 3, 2)\nlouisvilleRankings <- format(louisvilleRankings, big.mark = ',')\n\nallRankings <- allRankings %>% select(-Value)\nallRankings <- spread(allRankings, Datapoint, Rank)\n\n#stateData <- full_join(laborForceParticipationRateKY, laborForceSizeKY, by = joinAllDataByThisVariable)\nstateData <- full_join(laborForceParticipationRateKY, laborForceSizeKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, medianHomeValueKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, medianHouseholdWageKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, medianMonthlyRentKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, populationKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, unemploymentRateKY, by = joinAllDataByThisVariable)\nstateData <- full_join(stateData, oesStateData, by = joinAllDataByThisVariable)\n\n# US DATA\nusData <- full_join(laborForceParticipationRateUS , laborForceSizeUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, medianHomeValueUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, medianHouseholdWageUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, medianMonthlyRentUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, populationUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, unemploymentRateUS, by = joinAllDataByThisVariable)\nusData <- full_join(usData, oesNationData, by = joinAllDataByThisVariable)\n\n\n## MERGE STATE AND US DATA\nstateUsData <- rbind(usData, stateData)\nstateUsData <- stateUsData %>% mutate(Area = ifelse(area_code == 1, \"United States\", \"Kentucky\"))\nstateUsData <- stateUsData %>% select(10, 2:9)\n\n# Add Louisville data\nlouisvilleAllData <- allData %>% filter(MSA == \"Louisville\") %>% select(2:9)\nlouisvilleAllData$Area <- \"Louisville\"\n\nstateUsData <- rbind(stateUsData, louisvilleAllData)\n\npeerCitiesGoogleSheet <- gs_title(\"Peer Cities One-Pager\")\nallRankingsGoogleSheet <- gs_title(\"All Rankings One-Pager\")\nlouisvilleRankingsGoogleSheet <- gs_title(\"Louisville Rankings One-Pager\")\ngrowthLouisvilleGoogleSheet <- gs_title(\"Growth Louisville One-Pager\")\nstateAndUsDataGoogleSheet <- gs_title(\"State and US One-Pager\")\n\n\npeerCitiesGoogleSheet <- peerCitiesGoogleSheet %>% gs_edit_cells(input = allData)\nallRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)\nlouisvilleRankingsGoogleSheet <- louisvilleRankingsGoogleSheet %>% gs_edit_cells(input = louisvilleRankings)\ngrowthLouisvilleGoogleSheet <- growthLouisvilleGoogleSheet %>% gs_edit_cells(input = qcewGrowthLouisville)\nstateAndUsDataGoogleSheet <- stateAndUsDataGoogleSheet %>% gs_edit_cells(input = stateUsData)",
    "created" : 1500931939418.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2799934957",
    "id" : "D407380",
    "lastKnownWriteTime" : 1500998227,
    "last_content_update" : 1500998227,
    "path" : "~/Desktop/rProjects/rstudioWork/onePager/one_pager_cron_job.R",
    "project_path" : "one_pager_cron_job.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}