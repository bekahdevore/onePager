allRankingsTEST <- allRankings %>% select(-Value)
allRankingsTEST %>% spread(allRankingsTEST, datapoint, Rank)
allRankingsTEST %>% spread(allRankingsTEST, Rank, Datapoint)
allRankingsTEST %>% spread(allRankingsTEST, Datapoint, Rank)
View(allRankingsTEST)
View(allRankingsTEST)
allRankingsTEST %>% spread(allRankingsTEST, MSA, Rank)
spread(allRankingsTEST, MSA, Rank)
test <- spread(allRankingsTEST, Datapoint, Rank)
View(test)
unemploymentRateRanking
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
allRankings <- spread(allRankings, Datapoint, Rank)
View(allRankings)
allRankingsGoogleSheet <- gs_new("All Rankings One-Pager")
allRankingsGoogleSheet <- gs_title("All Rankings One-Pager")
allRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)
allRankings <- getURL("https://docs.google.com/spreadsheets/d/e/2PACX-1vTYM8rmhH6Uy_bHbvUtlDAvphu_MLwRH40hRMwRIwwQbtw-KUXNWkEY4zdsAy6fQfmIvF-RgHoMguKl/pub?gid=0&single=true&output=csv")
allRankings <- getURL("https://docs.google.com/spreadsheets/d/e/2PACX-1vTYM8rmhH6Uy_bHbvUtlDAvphu_MLwRH40hRMwRIwwQbtw-KUXNWkEY4zdsAy6fQfmIvF-RgHoMguKl/pub?gid=0&single=true&output=csv")
allRankings <- read.csv(textConnection(allRankings), check.names = FALSE)
allRankings$Population <- sort(allRankings$Population)
runApp()
runApp()
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
allRankings <- spread(allRankings, Datapoint, Rank)
allRankingsGoogleSheet <- gs_title("All Rankings One-Pager")
allRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)
runApp()
shiny::runApp()
runApp()
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage (USD)")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
allRankings <- spread(allRankings, Datapoint, Rank)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
louisvilleRankings <- louisvilleRankings %>% select(4, 3, 2)
louisvilleRankings$Value <- round(louisvilleRankings$Value)
louisvilleRankings <- format(louisvilleRankings, big.mark = ',')
library(rvest) # used to scrape data from html on websites
library(RCurl) # used to get URLs
library(stringr) # used to replace specific values with other values
library(dplyr) # used to pipe data manipultion
library(tidyr)
library(googlesheets)
## Grab  MSA area codes from google sheets
areaCodeConnection <- getURL("https://docs.google.com/spreadsheets/d/1MIgcX_LQBF2J2pzevXRPJzy9UKjaVls9vNda3Pgay3Q/pub?gid=0&single=true&output=csv")
peerAreaCodes <- read.csv(textConnection(areaCodeConnection))
## Run scripts to gather and oganize data for one-pager
source("variables.R")
source("functions.R")
source("acsData.R")
library(rvest) # used to scrape data from html on websites
library(RCurl) # used to get URLs
library(stringr) # used to replace specific values with other values
library(dplyr) # used to pipe data manipultion
library(tidyr)
library(googlesheets)
## Grab  MSA area codes from google sheets
areaCodeConnection <- getURL("https://docs.google.com/spreadsheets/d/1MIgcX_LQBF2J2pzevXRPJzy9UKjaVls9vNda3Pgay3Q/pub?gid=0&single=true&output=csv")
peerAreaCodes <- read.csv(textConnection(areaCodeConnection))
## Run scripts to gather and oganize data for one-pager
source("variables.R")
source("functions.R")
source("acsData.R")
source("qcewData.R")
source("oesData.R")
source("lausData.R")
source("mainDataMerge.R")
source("rankings.R")
source("stateUsData.R")
## Add commas to numbers
#allData <- format(allData, big.mark = ',')
#qcewGrowthLouisville <- format(qcewGrowthLouisville, big.mark = ',')
#stateUsData <- format(stateUsData, big.mark = ',')
#stateUsData <- stateUsData %>% select(-1)
## Export datatables as .csv documents
# write.csv(allData, file = "mainDataForOnePager.csv")
# write.csv(mitLivingWageLouisvilleMSA, file = "mitLivingWageData.csv")
# write.csv(louisvilleRankings, file = "louisvilleRankings.csv")
# write.csv(qcewGrowthLouisville, file = "growthLouisville.csv")
# write.csv(stateUsData, file = "stateUsData.csv")
## push to google sheet
peerCitiesGoogleSheet <- gs_title("Peer Cities One-Pager")
allRankingsGoogleSheet <- gs_title("All Rankings One-Pager")
louisvilleRankingsGoogleSheet <- gs_title("Louisville Rankings One-Pager")
growthLouisvilleGoogleSheet <- gs_title("Growth Louisville One-Pager")
stateAndUsDataGoogleSheet <- gs_title("State and US One-Pager")
peerCitiesGoogleSheet <- peerCitiesGoogleSheet %>% gs_edit_cells(input = allData)
allRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)
louisvilleRankingsGoogleSheet <- louisvilleRankingsGoogleSheet %>% gs_edit_cells(input = louisvilleRankings)
growthLouisvilleGoogleSheet <- growthLouisvilleGoogleSheet %>% gs_edit_cells(input = qcewGrowthLouisville)
stateAndUsDataGoogleSheet <- stateAndUsDataGoogleSheet %>% gs_edit_cells(input = stateUsData)
shiny::runApp()
runApp()
library(rvest) # used to scrape data from html on websites
library(RCurl) # used to get URLs
library(stringr) # used to replace specific values with other values
library(dplyr) # used to pipe data manipultion
library(tidyr)
library(googlesheets)
## Grab  MSA area codes from google sheets
areaCodeConnection <- getURL("https://docs.google.com/spreadsheets/d/1MIgcX_LQBF2J2pzevXRPJzy9UKjaVls9vNda3Pgay3Q/pub?gid=0&single=true&output=csv")
peerAreaCodes <- read.csv(textConnection(areaCodeConnection))
## Run scripts to gather and oganize data for one-pager
source("variables.R")
source("functions.R")
source("acsData.R")
source("qcewData.R")
source("oesData.R")
source("lausData.R")
source("mainDataMerge.R")
source("rankings.R")
source("stateUsData.R")
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage (USD)")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
allRankings <- spread(allRankings, Datapoint, Rank)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
louisvilleRankings <- louisvilleRankings %>% select(4, 3, 2)
louisvilleRankings$Value <- round(louisvilleRankings$Value)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
View(louisvilleRankings)
View(louisvilleRankings)
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage (USD)")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
louisvilleRankings <- louisvilleRankings %>% select(4, 3, 2)
louisvilleRankings <- format(louisvilleRankings, big.mark = ',')
allRankings <- spread(allRankings, Datapoint, Rank)
View(louisvilleRankings)
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage (USD)")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
allRankings <- allRankings %>% select(-Value)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
###  RANKINGS, WOULD BE CLEANER IF UPDATED WITH A FUNCTION
lfprRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Participation Rate`))
lfprRanking <- lfprRanking %>% select(1, 2, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Participation Rate")
colnames(lfprRanking)[2] <- "Value"
lfSizeRanking <- allData %>%
mutate("Rank" = rank(-`Labor Force Size`)) %>%
select(1, 3, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Labor Force Size")
colnames(lfSizeRanking)[2] <- "Value"
medianHomeValueRanking <- allData %>%
mutate("Rank" = rank(-`Median Home Value`)) %>%
select(1, 4, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Home Value")
colnames(medianHomeValueRanking)[2] <- "Value"
medianHouseholdWageRanking <- allData %>%
mutate("Rank" = rank(-`Median Household Wage`)) %>%
select(1, 5, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Household Wage")
colnames(medianHouseholdWageRanking)[2] <- "Value"
medianMonthlyRentRank <- allData %>%
mutate("Rank" = rank(-`Median Monthly Rent`)) %>%
select(1, 6, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Median Monthly Rent")
colnames(medianMonthlyRentRank)[2] <- "Value"
annualMedianWageRank <- allData %>%
mutate("Rank" = rank(-`Annual Median Wage (USD)`)) %>%
select(1, 9, 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Annual Median Wage (USD)")
colnames(annualMedianWageRank)[2] <- "Value"
populationRanking <- allData %>%
mutate("Rank" = rank(-Population)) %>%
select(1, 7, 14)  %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Population")
colnames(populationRanking)[2] <- "Value"
unemploymentRateRanking <- allData %>%
mutate("Rank" = rank(`Unemployment Rate`)) %>%
select(1, 8 , 14) %>%
#filter(MSA == "Louisville") %>%
mutate(Datapoint = "Unemployment Rate")
colnames(unemploymentRateRanking)[2] <- "Value"
unemploymentRateRanking$Rank <- round(unemploymentRateRanking$Rank)
allRankings <- rbind(lfprRanking, lfSizeRanking,
medianHomeValueRanking, medianHouseholdWageRanking,
medianMonthlyRentRank, annualMedianWageRank,
populationRanking, unemploymentRateRanking)
louisvilleRankings <- allRankings %>% filter(MSA == "Louisville")
louisvilleRankings <- louisvilleRankings %>% select(4, 3, 2)
louisvilleRankings <- format(louisvilleRankings, big.mark = ',')
allRankings <- allRankings %>% select(-Value)
allRankings <- spread(allRankings, Datapoint, Rank)
## push to google sheet
peerCitiesGoogleSheet <- gs_title("Peer Cities One-Pager")
allRankingsGoogleSheet <- gs_title("All Rankings One-Pager")
louisvilleRankingsGoogleSheet <- gs_title("Louisville Rankings One-Pager")
growthLouisvilleGoogleSheet <- gs_title("Growth Louisville One-Pager")
stateAndUsDataGoogleSheet <- gs_title("State and US One-Pager")
peerCitiesGoogleSheet <- peerCitiesGoogleSheet %>% gs_edit_cells(input = allData)
allRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)
louisvilleRankingsGoogleSheet <- louisvilleRankingsGoogleSheet %>% gs_edit_cells(input = louisvilleRankings)
growthLouisvilleGoogleSheet <- growthLouisvilleGoogleSheet %>% gs_edit_cells(input = qcewGrowthLouisville)
stateAndUsDataGoogleSheet <- stateAndUsDataGoogleSheet %>% gs_edit_cells(input = stateUsData)
shiny::runApp()
runApp()
shiny::runApp()
library(rvest)
library(RCurl) # used to get URLs
library(stringr) # used to replace specific values with other values
library(dplyr) # used to pipe data manipultion
library(tidyr)
library(googlesheets)
## Grab  MSA area codes from google sheets
areaCodeConnection <- getURL("https://docs.google.com/spreadsheets/d/1MIgcX_LQBF2J2pzevXRPJzy9UKjaVls9vNda3Pgay3Q/pub?gid=0&single=true&output=csv")
peerAreaCodes <- read.csv(textConnection(areaCodeConnection))
## Run scripts to gather and oganize data for one-pager
source("variables.R")
source("functions.R")
source("acsData.R")
source("qcewData.R")
source("oesData.R")
oesMainData
View(oesMainData)
View(oesStateData)
View(oesNationData)
View(oesMetrosData)
source("lausData.R")
source("mainDataMerge.R")
source("rankings.R")
source("stateUsData.R")
stateUsData$`Annual Median Wage (USD)` <- as.numeric(as.character(stateUsData$`Annual Median Wage (USD)`))
View(stateUsData)
## push to google sheet
peerCitiesGoogleSheet <- gs_title("Peer Cities One-Pager")
allRankingsGoogleSheet <- gs_title("All Rankings One-Pager")
louisvilleRankingsGoogleSheet <- gs_title("Louisville Rankings One-Pager")
growthLouisvilleGoogleSheet <- gs_title("Growth Louisville One-Pager")
stateAndUsDataGoogleSheet <- gs_title("State and US One-Pager")
peerCitiesGoogleSheet <- peerCitiesGoogleSheet %>% gs_edit_cells(input = allData)
allRankingsGoogleSheet <- allRankingsGoogleSheet %>% gs_edit_cells(input = allRankings)
louisvilleRankingsGoogleSheet <- louisvilleRankingsGoogleSheet %>% gs_edit_cells(input = louisvilleRankings)
growthLouisvilleGoogleSheet <- growthLouisvilleGoogleSheet %>% gs_edit_cells(input = qcewGrowthLouisville)
stateAndUsDataGoogleSheet <- stateAndUsDataGoogleSheet %>% gs_edit_cells(input = stateUsData)
